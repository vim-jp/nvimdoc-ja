*remote.txt*    Nvim 0.12        Last change: 2025-08-24


		VIMリファレンスマニュアル    by Bram Moolenaar


Vimクライアントサーバー通信				*client-server*

                                            目次を確認するには |gO| をタイプ。

==============================================================================
1. 共通機能						*clientserver*

Nvim の |RPC| 機能により、クライアントは Nvim をプログラム制御できます。Nvim 自
体がコマンドライン引数を受け取り、サーバーとして動作している別の Nvim のクライ
アントになります。これらの引数は、Vim の clientserver オプションで提供されるも
のと同じです。

以下のコマンドライン引数が利用できる:

    引数			意味 ~

   --remote [+{cmd}] {file} ...					*--remote*
				ファイルをリモートのVimで開く。Vimサーバーが無
				い時には、ローカルで実行される。Vim は +{cmd}
				に一つだけExコマンドを指定できる。コマンドは
				"|" でつなげて複数指定できる。この機能は Nvim
				ではサポートされていない。コマンドラインの残り
				の部分はファイルのリストとして扱われる。だから
				ファイルではない引数はこれよりも前に書かなけれ
				ばならない。この方法で標準入力を開くことはでき
				ない|--|。次のようにしなければリモートの Vimが
				問題を起こすかもしれない。 >
				nvim --remote-send "<C-\><C-N>:n filename<CR>"
<
   --remote-silent [+{cmd}] {file} ...			*--remote-silent*
				上と同様、しかしサーバーが存在しなくてもエラー
				を報告しない。指定したファイルがすでにローカル
				で編集中であっても同様。
							*--remote-tab*
   --remote-tab			--remote と同様、しかし各ファイルを新しいタブ
				ページで開く。
							*--remote-tab-silent*
   --remote-tab-silent		--remote-silent と同様、しかし各ファイルを新し
				いタブページで開く。
								*--remote-send*
   --remote-send {keys}		サーバーに{keys}を送信して終了する。{keys} に
				マップは適用されない。特殊キー名が使用できる。
				例: "<CR>" は CR 文字になる。
								*--remote-expr*
   --remote-expr {expr}		サーバーに{expr}を実行評価させ、その結果を標準
				出力に印刷する。
								*--remote-ui*
   --remote-ui			サーバーの UI を端末に表示する。完全にインタラ
                                クティブであり、キーボード及びマウスの入力は
                                サーバーに転送される。
								*--server*
   --server {addr}		リモートコマンドを実行するために、指定された名
                                前付きパイプまたはソケットに接続する。サーバー
                                の起動時にアドレスを指定するには |--listen| を
                                参照。

使用例 ~

'~/.cache/nvim/server.pipe' にある名前付きパイプをリッスンする Nvim サーバーを
起動: >
    nvim --listen ~/.cache/nvim/server.pipe

'~/.cache/nvim/server.pipe' をリッスンしている Nvim サーバーで "file.txt" を編
集: >
    nvim --server ~/.cache/nvim/server.pipe --remote file.txt

--remoteの後の全ての引数がファイル名として解釈されるので動作しない: >
    nvim --remote --server ~/.cache/nvim/server.pipe file.txt

リモートサーバーで編集中の全てのファイルを保存して終了する: >
    nvim --server ~/.cache/nvim/server.pipe --remote-send '<C-\><C-N>:wqa<CR>'


☆リモート編集

引数 --argument は残りのコマンドラインから |:drop| コマンドを構成することを引き
起こし、それを上記の方法で送信する。
引数 --remote と --remote-wait は残りのコマンドライン全てを自分のものとして扱
うことに注意。言い換えれば残り全ての引数はファイル名とみなされる。そこにオプ
ションを置くことはできない!


==============================================================================
2. 未実装の機能    				*E5600* *clientserver-missing*

Vim の clientserver は Nvim にはまだ実装されていない追加の機能をサポートしてい
ます。特に、"wait" 系の機能は未だサポートされていません。
以下のコマンドライン引数は利用できません:

    引数			意味 ~

   --remote-wait [+{cmd}] {file} ...				*--remote-wait*
				Nvim ではまだサポートされていない。
				--remoteと 同様、しかしリモートVimでファイルが
				完了(解放)されるまで待つ。
   --remote-wait-silent [+{cmd}] {file} ...		*--remote-wait-silent*
				Nvim ではまだサポートされていない。
				--remote-wait と同様、しかしサーバーが存在しな
				くてもエラーを報告しない。
							*--remote-tab-wait*
   --remote-tab-wait		Nvim ではまだサポートされていない。
				--remote-wait と同様、しかし各ファイルを新しい
				タブページで開く。
						*--remote-tab-wait-silent*
   --remote-tab-wait-silent	Nvim ではまだサポートされていない。
				--remote-wait-silent と同様、しかし各ファイル
				を新しいタブページで開く。
							    *--servername*
   --servername {name}		Nvim ではまだサポートされていない。
				サーバー名{name}になる。--remote コマンドのど
				れか1つと併用すると、デフォルトのサーバーでは
				なく{name}で指定されるサーバーに接続する(下を
				参照)。使用される名前は大文字になる。

								*--serverlist*
   --serverlist			Nvim ではまだサポートされていない。
				サーバー名のリストを表示する。




☆サーバー名						*client-server-name*

デフォルトではVimは自分が起動された時の名前(gvim, egvim ...)のサーバーになろう
とする。これは引数 --servername で変更できる。Nvim は名前付きパイプまたはソケッ
トをリッスンしますが、この --servername 機能はまだサポートしていません。

 vim:tw=78:sw=4:ts=8:noet:ft=help:norl:
